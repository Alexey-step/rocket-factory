// Code generated for Alexey-step service
// Â© Alexey-step 2025.
// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// OrderHTTPConfig is an autogenerated mock type for the OrderHTTPConfig type
type OrderHTTPConfig struct {
	mock.Mock
}

type OrderHTTPConfig_Expecter struct {
	mock *mock.Mock
}

func (_m *OrderHTTPConfig) EXPECT() *OrderHTTPConfig_Expecter {
	return &OrderHTTPConfig_Expecter{mock: &_m.Mock}
}

// Address provides a mock function with no fields
func (_m *OrderHTTPConfig) Address() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Address")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// OrderHTTPConfig_Address_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Address'
type OrderHTTPConfig_Address_Call struct {
	*mock.Call
}

// Address is a helper method to define mock.On call
func (_e *OrderHTTPConfig_Expecter) Address() *OrderHTTPConfig_Address_Call {
	return &OrderHTTPConfig_Address_Call{Call: _e.mock.On("Address")}
}

func (_c *OrderHTTPConfig_Address_Call) Run(run func()) *OrderHTTPConfig_Address_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *OrderHTTPConfig_Address_Call) Return(_a0 string) *OrderHTTPConfig_Address_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *OrderHTTPConfig_Address_Call) RunAndReturn(run func() string) *OrderHTTPConfig_Address_Call {
	_c.Call.Return(run)
	return _c
}

// MigrationsDir provides a mock function with no fields
func (_m *OrderHTTPConfig) MigrationsDir() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for MigrationsDir")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// OrderHTTPConfig_MigrationsDir_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'MigrationsDir'
type OrderHTTPConfig_MigrationsDir_Call struct {
	*mock.Call
}

// MigrationsDir is a helper method to define mock.On call
func (_e *OrderHTTPConfig_Expecter) MigrationsDir() *OrderHTTPConfig_MigrationsDir_Call {
	return &OrderHTTPConfig_MigrationsDir_Call{Call: _e.mock.On("MigrationsDir")}
}

func (_c *OrderHTTPConfig_MigrationsDir_Call) Run(run func()) *OrderHTTPConfig_MigrationsDir_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *OrderHTTPConfig_MigrationsDir_Call) Return(_a0 string) *OrderHTTPConfig_MigrationsDir_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *OrderHTTPConfig_MigrationsDir_Call) RunAndReturn(run func() string) *OrderHTTPConfig_MigrationsDir_Call {
	_c.Call.Return(run)
	return _c
}

// NewOrderHTTPConfig creates a new instance of OrderHTTPConfig. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewOrderHTTPConfig(t interface {
	mock.TestingT
	Cleanup(func())
}) *OrderHTTPConfig {
	mock := &OrderHTTPConfig{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
